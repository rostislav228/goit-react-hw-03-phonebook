{"version":3,"sources":["components/ContactElement/ContactListItem.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Section","title","children","ContactForm","state","name","number","changeHandler","e","target","value","setState","submitHandler","preventDefault","contact","id","uuid","props","addContact","reset","this","onSubmit","className","s","form","input","type","placeholder","onChange","disabled","length","Component","ContactListItem","onDelete","li","onClick","ContactList","contacts","map","Filter","App","filter","deleteContactbyId","updatedContacts","newName","toLowerCase","includes","trim","alert","filterContactsByName","JSON","parse","localStorage","getItem","setItem","prevProps","prevState","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dddb4478.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactListItem_li__1ki0z\"};","import PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nimport uuid from \"react-uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.submitHandler} className={s.form}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name\"\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          Number:\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number\"\r\n            onChange={this.changeHandler}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactListItem.module.css\";\r\n\r\nfunction ContactListItem({ name, number, onDelete }) {\r\n  return (\r\n    <li className={s.li}>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={onDelete}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactElement/ContactElement\";\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts ? (\r\n        contacts.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={() => onDelete(id)}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>no contact with such name in your phone </p>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ onChange }) {\r\n  return (\r\n    <label>\r\n      Filter:\r\n      <input type=\"text\" name=\"filter\" onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section/Section.js\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter.js\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    if (!JSON.parse(localStorage.getItem(\"contacts\"))) {\n      localStorage.setItem(\"contacts\", \"[]\");\n      return;\n    }\n    this.setState(() => ({\n      contacts: JSON.parse(localStorage.getItem(\"contacts\")),\n    }));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  deleteContactbyId = (id) => {\n    const { contacts } = this.state;\n    const updatedContacts = contacts.filter((contact) => contact.id !== id);\n    this.setState({\n      contacts: [...updatedContacts],\n    });\n  };\n\n  addContact = (contact) => {\n    const newName = contact.name;\n    const names = this.state.contacts.map((contact) =>\n      contact.name.toLowerCase()\n    );\n    if (names.includes(newName.toLowerCase().trim())) {\n      alert(`${newName} is already in contact list`);\n    } else {\n      this.setState((state) => ({\n        contacts: [...state.contacts, contact],\n      }));\n    }\n  };\n\n  filterContactsByName = () => {\n    const { contacts, filter } = this.state;\n    if (contacts.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  render() {\n    const { contacts } = this.state;\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm addContact={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          {contacts.length > 1 && <Filter onChange={this.changeHandler} />}\n          <ContactList\n            contacts={this.filterContactsByName()}\n            onDelete={this.deleteContactbyId}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2rSsJ\",\"input\":\"ContactForm_input__HOT5f\"};"],"sourceRoot":""}